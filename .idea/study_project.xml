<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="VERSION" value="13" />
      <option name="myUserTests">
        <map />
      </option>
      <option name="course">
        <EduCourse>
          <option name="authors">
            <list>
              <StepikUserInfo>
                <option name="firstName" value="Florian" />
                <option name="id" value="90732511" />
                <option name="lastName" value="Herborn (CoLab, CIDE TH Koeln)" />
              </StepikUserInfo>
            </list>
          </option>
          <option name="compatible" value="true" />
          <option name="courseMode" value="Course Creator" />
          <option name="courseType" value="PyCharm" />
          <option name="customPresentableName" />
          <option name="description" value="A Kotlin course for beginners. Simple Tasks to start coding Kotlin." />
          <option name="fromZip" value="false" />
          <option name="id" value="53539" />
          <option name="index" value="-1" />
          <option name="instructors">
            <list>
              <option value="90732511" />
            </list>
          </option>
          <option name="language" value="kotlin 1.2" />
          <option name="languageCode" value="en" />
          <option name="loadSolutions" value="true" />
          <option name="name" value="Kotlin Getting Started" />
          <option name="public" value="false" />
          <option name="sectionIds">
            <list>
              <option value="82650" />
            </list>
          </option>
          <option name="stepikChangeStatus" value="Up to date" />
          <option name="type" value="pycharm10 kotlin 1.2" />
          <option name="updateDate" value="1554794964000" />
          <option name="items">
            <list>
              <Lesson>
                <option name="customPresentableName" />
                <option name="id" value="221020" />
                <option name="index" value="1" />
                <option name="name" value="Getting Started" />
                <option name="stepikChangeStatus" value="Up to date" />
                <option name="updateDate" value="1554794964000" />
                <option name="taskList">
                  <list>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&lt;p&gt;&#10;  Erstelle eine &lt;b&gt;Funktion&lt;/b&gt; namens &lt;code&gt;main()&lt;/code&gt;,&#10;  welche in der Konsole den String &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; ausgibt.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;  Verwende dazu die Funktion &lt;code&gt;print()&lt;/code&gt; aus der Kotlin Bibliothek.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  &lt;strong&gt;Erwartete Ausgabe (Konsole):&lt;/strong&gt;&#10;  &lt;br&gt;&#10;  &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt;&#10;&lt;/p&gt;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Die Funktion &lt;code&gt;print()&lt;/code&gt; ist ein wrapper um die aus Java bekannte Funktion&#10;  &lt;code&gt;System.out.print()&lt;/code&gt;&#10;&lt;/div&gt;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="1" />
                      <option name="name" value="Hello World" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675884" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="fun main(){&#10;    print(&quot;Hello World&quot;)&#10;}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811496000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&lt;ol&gt;&#10;    &lt;li&gt;Erstelle eine veränderliche &lt;b&gt;Variable&lt;/b&gt; namens &lt;code&gt;age&lt;/code&gt; vom Typ &lt;code&gt;Int&lt;/code&gt; und initialisiere sie mit dem Wert &lt;code&gt;18&lt;/code&gt;&lt;/li&gt;&#10;    &lt;li&gt;Erstelle eine veränderliche &lt;b&gt;Variable&lt;/b&gt; namens &lt;code&gt;size&lt;/code&gt; vom Typ &lt;code&gt;Double&lt;/code&gt; und initialisiere sie mit dem Wert &lt;code&gt;182.5&lt;/code&gt;&lt;/li&gt;&#10;    &lt;li&gt;Erstelle ein unveränderliche &lt;b&gt;Value&lt;/b&gt; namens &lt;code&gt;name&lt;/code&gt; vom Typ &lt;code&gt;String&lt;/code&gt; und initialisiere sie mit dem Wert &lt;code&gt;&quot;Hans&quot;&lt;/code&gt;&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;    In Kotlin wird die Unterscheidung zwischen finalen und nicht finalen Variablen mit Hilfe der Schlüsselwörter &lt;code&gt;val&lt;/code&gt; und &lt;code&gt;var&lt;/code&gt; gemacht.&#10;&lt;/div&gt;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="2" />
                      <option name="name" value="Variables &amp; Type-Inference" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675885" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="var age = 18&#10;var size = 182.5&#10;val name = &quot;Hans&quot;" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811497000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&lt;p&gt;&#10;  Erstelle eine &lt;b&gt;Funktion&lt;/b&gt; namens &lt;code&gt;printName(...)&lt;/code&gt;,&#10;  welche einen Namen vom Typ &lt;code&gt;String&lt;/code&gt; entgegen nimmt und diesen in der Konsole in folgendem Format ausgibt:&#10;  &lt;br&gt;&#10;  &lt;code&gt;&quot;Name: &amp;#60;name&amp;#62;&quot;&lt;/code&gt;.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;  Verwende dazu die Funktion &lt;code&gt;print()&lt;/code&gt; aus der Kotlin Bibliothek und ein String Template&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;  &lt;strong&gt;Erwartete Ausgabe (Konsole):&lt;/strong&gt;&#10;  &lt;br&gt;&#10;  &lt;code&gt;&quot;Name: &amp;#60;name&amp;#62;&quot;&lt;/code&gt;&#10;&lt;/p&gt;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Mit Hilfe eines &lt;code&gt;$&lt;/code&gt; können Werte direkt in einen String eingefügt werden.&#10;&lt;/div&gt;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="3" />
                      <option name="name" value="Output &amp; String-Template" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675886" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="34" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="print(&quot;Name: $name&quot;)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811497000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;    &lt;li&gt;Erstelle eine Funktion namens &lt;code&gt;printSum(...)&lt;/code&gt;, welche zwei Integer entgegen nimmt und die Summe dieser in der Konsole ausgibt.&lt;/li&gt;&#10;    &lt;li&gt;Erstelle eine Funktion namens &lt;code&gt;sum(..)&lt;/code&gt;, welche zwei Integer entgegen nimmt und die Summe dieser zurück liefert.&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;p&gt;&#10;    Verwende für die Ausgabe die Funktion &lt;code&gt;print()&lt;/code&gt; aus der Kotlin Bibliothek.&#10;&lt;/p&gt;&#10;&#10;&lt;p&gt;&#10;    &lt;strong&gt;Erwartete Ausgabe (Konsole):&lt;/strong&gt;&#10;    &lt;br&gt;&#10;    &lt;code&gt;&quot;&amp;#60;Summe der Integer&amp;#62;&quot;&lt;/code&gt;&#10;&lt;/p&gt;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;    Funktionen die folgenden Aufbau haben:&#10;    &lt;br&gt;&#10;    &lt;code&gt;&#10;        fun a(): &amp;#60;T&amp;#62; {&#10;        return ...&#10;        }&#10;    &lt;/code&gt;&#10;    &lt;br&gt;&#10;    können in Kotlin abgekürzt werden durch:&#10;    &lt;br&gt;&#10;    &lt;code&gt;&#10;        fun a(): &amp;#60;T&amp;#62; = ...&#10;    &lt;/code&gt;&#10;&lt;/div&gt;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="4" />
                      <option name="name" value="Functions" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675887" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="fun printSum(v1: Int, v2: Int) {&#10;    print(v1 + v2)&#10;}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="55" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="fun sum(v1: Int, v2: Int) = v1 + v2" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811499000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;p&gt;&#10;  Erstelle eine &lt;b&gt;Funktion&lt;/b&gt; namens &lt;code&gt;getFullName(...)&lt;/code&gt;, welche (in der richtigen Reihenfolge) folgende Werte entgegen nimmt:&#10;  &lt;br&gt;&#10;&lt;/p&gt;&#10;&lt;ol&gt;&#10;  &lt;li&gt;&lt;code&gt;firstName&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;lastName&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;  &lt;li&gt;&lt;code&gt;birthName&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;p&gt;&#10;  Dabei soll der Parameter &lt;code&gt;birthName&lt;/code&gt; als default value den Wert von &lt;code&gt;lastName&lt;/code&gt; erhalten.&#10;&lt;/p&gt;&#10;&lt;p&gt;&#10;  Der Rückgabewert der Funktion sollte wiefolgt aussehen:&#10;  &lt;br&gt;&#10;  &lt;code&gt;&quot;&amp;#60;firstName&amp;#62; &amp;#60;lastName&amp;#62; (&amp;#60;birthName&amp;#62;)&quot;&lt;/code&gt;&#10;&lt;/p&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="5" />
                      <option name="name" value="Default Parameters" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675888" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="fun getFullName(firstName: String, lastName: String, birthName: String = lastName) = &quot;$firstName $lastName ($birthName)&quot;" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811500000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;  &lt;li&gt;Vervollständige die Funktion &lt;code&gt;createStringList()&lt;/code&gt; so, dass sie eine unveränderliche Liste mit den Strings &lt;code&gt;&quot;A&quot;, &quot;B&quot;, &quot;C&quot;&lt;/code&gt; zurück gibt.&lt;/li&gt;&#10;  &lt;li&gt;Vervollständige die Funktion &lt;code&gt;createStringArray()&lt;/code&gt; so, dass sie ein Array mit den Strings &lt;code&gt;&quot;A&quot;, &quot;B&quot;, &quot;C&quot;&lt;/code&gt; zurück gibt.&lt;/li&gt;&#10;&#10;&lt;/ol&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Kotlin bietet  globale Funktionen, die das Erstellen von Listen und Arrays vereinfachen.&#10;&lt;/div&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="6" />
                      <option name="name" value="Arrays &amp; Lists" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675889" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="25" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="listOf(&#10;        &quot;A&quot;,&#10;        &quot;B&quot;,&#10;        &quot;C&quot;&#10;)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="100" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="arrayOf(&#10;        &quot;A&quot;,&#10;        &quot;B&quot;,&#10;        &quot;C&quot;&#10;)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811500000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;  &lt;li&gt;Erstelle eine finale Variable namens &lt;code&gt;sum&lt;/code&gt;, welche eine Funktion hällt, die zwei Integer entgegen nimmt und die Summe dieser zurück gibt.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;Vervollständige die Funktion &lt;code&gt;operateOnEach(...)&lt;/code&gt; so, dass sie (in der richtigen Reihenfolge):&#10;    &lt;ul&gt;&#10;      &lt;li&gt;eine Liste von Integern&lt;/li&gt;&#10;      &lt;li&gt;einen einzelnen Integer&lt;/li&gt;&#10;      &lt;li&gt;und eine Funktion, welche aus zwei Integern ein Integer macht&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    entgegen nimmt und eine durch die operation manipulierte Liste zurück gibt.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Vervollständige die Funktion &lt;code&gt;sumOnEach&lt;/code&gt; so, dass sie die zuvor erstellte Funktion &lt;code&gt;operateOnEach(...)&lt;/code&gt; mit den übergebenen Parametern sowie&#10;    der sum Funktion aufruft.&#10;  &lt;/li&gt;&#10;&#10;&lt;/ol&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="7" />
                      <option name="name" value="Function Types &amp; Lambdas" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675890" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="9" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="(Int, Int) -&gt; Int" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="29" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="{ v1, v2 -&gt;&#10;    v1 + v2&#10;}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="74" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="values: List&lt;Int&gt;, v2: Int, operation: (Int, Int) -&gt; Int" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="3" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="134" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="values.map{ operation(it, v2) }" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="4" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="211" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="operateOnEach(values, v2, sum)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811501000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;p&gt;&#10;  Erstelle eine &lt;b&gt;Extension Funktion&lt;/b&gt; namens &lt;code&gt;capitalize()&lt;/code&gt; für die Klasse &lt;code&gt;String&lt;/code&gt;, welche den String mit einem großen&#10;  Anfangsbuchstaben zurück gibt.&#10;&lt;/p&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Diese Funktion kann durch die Verkettung von Funktionen der String Klasse erreicht werden.&#10;&lt;/div&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="8" />
                      <option name="name" value="Extension Functions" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675891" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="fun String.capitalize() = this.replaceFirst(this.first(), this.first().toUpperCase())" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811502000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;  &lt;li&gt;Erstelle eine &lt;b&gt;Data Class&lt;/b&gt; namens &lt;code&gt;Address&lt;/code&gt;, welche (in der richtigen Reihenfolge) die finalen Parameter:&#10;    &lt;ul&gt;&#10;      &lt;li&gt;&lt;code&gt;street&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;      &lt;li&gt;&lt;code&gt;houseNumber&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;      &lt;li&gt;&lt;code&gt;postalCode&lt;/code&gt; vom Typ Int&lt;/li&gt;&#10;      &lt;li&gt;&lt;code&gt;city&lt;/code&gt; vom Typ String&lt;/li&gt;&#10;    &lt;/ul&gt;&#10;    im Konstruktor entgegen nimmt.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Stelle sicher, dass &lt;code&gt;setter &amp; getter&lt;/code&gt; entsprechend der Veränderlichkeit zur Verfügung gestellt werden.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Erstelle eine Klasse &lt;code&gt;AddressBook&lt;/code&gt;, welche eine finale veränderliche Liste von Adressen im Konstruktor entgegen nimmt und&#10;    passende &lt;code&gt;setter &amp; getter&lt;/code&gt; zur Verfügung stellt&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Vervollständige die Funktion &lt;code&gt;fun contains(address: Address)&lt;/code&gt; der Klasse &lt;code&gt;AddressBook&lt;/code&gt; so, dass sie ein Boolean zurück&#10;    gibt, welches angibt,  ob das &lt;code&gt;AddressBook&lt;/code&gt; die eingegebene Adresse oder eine Addresse mit den gleichen Werten enthält.&#10;  &lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="9" />
                      <option name="name" value="Classes" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675892" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="0" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="data class Address(val street: String, val houseNumber: String, val postalCode: Int, val city: String)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="104" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="class AddressBook(val addresses: MutableList&lt;Address&gt;)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="2" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="198" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="addresses.contains(address)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811502000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;    &lt;li&gt;&#10;        Erstelle eine &lt;b&gt;Custom Setter&lt;/b&gt; für die Variable &lt;code&gt;denominator&lt;/code&gt;, die sicherstellt, dass nur Werte&#10;        gesetzt werden, die != 0 sind.&#10;        Andernfalls soll eine &lt;code&gt;IllegalArgumentException()&lt;/code&gt; geschmissen werden.&#10;    &lt;/li&gt;&#10;    &lt;li&gt;&#10;        Erstelle eine &lt;b&gt;Custom Getter&lt;/b&gt; für das Attribut &lt;code&gt;decimal&lt;/code&gt;, welche den Bruch als Dezimalzahl zurück gibt.&#10;    &lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;    Auf das Baking-Field einer Variable kann über das Keyword &lt;code&gt;field&lt;/code&gt; zugegriffen werden.&#10;&lt;/div&gt;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="10" />
                      <option name="name" value="Custom Setter &amp; Getter" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675893" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="136" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="set(value) {&#10;            field = if(value != 0) value else throw IllegalArgumentException()&#10;        }" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="262" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="&#10;        get() = numerator.toDouble()/denominator" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811503000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;  &lt;li&gt;&#10;    Vervollständige die Funktion &lt;code&gt;firstCharacterOrNull()&lt;/code&gt; so, dass sie den ersten Character des Strings zurück gibt. Sofern der String&#10;    Leer ist oder nur aus Leerzeichen besteht, gebe &lt;code&gt;null&lt;/code&gt; zurück.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Vervollständige die Funktion &lt;code&gt;toUpperCaseIfNotNull(value: String?)&lt;/code&gt; so, dass sie den String mit Großbuchstaben zurück gibt, sofern&#10;    er nicht &lt;code&gt;null&lt;/code&gt; ist. Andernfalls gebe &lt;code&gt;null&lt;/code&gt; zurück.&#10;  &lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="11" />
                      <option name="name" value="Nullability" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675894" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="35" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="Char? = if (this.isBlank()) null else this[0]" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="125" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="value?.toUpperCase()" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811504000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;p&gt;&#10;  Erstelle  ein &lt;b&gt;Companion&lt;/b&gt; Objekt für die Klasse &lt;code&gt;Database&lt;/code&gt;, welches die Konstante &lt;code&gt;NAME_KEY&lt;/code&gt; mit dem value &lt;code&gt;&quot;MY_DB&quot;&lt;/code&gt;&#10;  bereitstellt.&#10;&lt;/p&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="12" />
                      <option name="name" value="Companion Objects" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675895" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="21" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="companion object {&#10;        const val NAME_KEY = &quot;MY_DB&quot;&#10;    }" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811504000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;html&gt;&#10;&#10;&lt;h3&gt;Aufgabe:&lt;/h3&gt;&#10;&#10;&lt;ol&gt;&#10;    &lt;li&gt;&#10;        Erstelle eine Klasse &lt;code&gt;Smiley&lt;/code&gt;, die das Interface &lt;code&gt;Drawable&lt;/code&gt; implementiert. Die Funktion&#10;        &lt;code&gt;draw()&lt;/code&gt; sollte den&#10;        String: &lt;code&gt;&quot;:-)&quot;&lt;/code&gt; in der Konsole ausgeben.&#10;&#10;        &lt;br&gt;&#10;        Verwende dazu die Funktion &lt;code&gt;print()&lt;/code&gt;&#10;    &lt;/li&gt;&#10;    &lt;li&gt;&#10;        Erstelle eine Klasse &lt;code&gt;HairySmiley&lt;/code&gt;, die von &lt;code&gt;Smiley&lt;/code&gt; erbt und die Ausgabe in &lt;code&gt;draw()&lt;/code&gt; durch ein &lt;code&gt;&quot;?&quot;&lt;/code&gt;&#10;        erweitert. Die Funktion &lt;code&gt;draw()&lt;/code&gt; sollte den String &lt;code&gt;&quot;?:-)&quot;&lt;/code&gt; in die Konsole schreiben.&#10;    &lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;/html&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" />
                          <option name="type" value="STEPIK" />
                        </FeedbackLink>
                      </option>
                      <option name="index" value="13" />
                      <option name="name" value="Interfaces" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="stepId" value="675896" />
                      <option name="stepikChangeStatus" value="Up to date" />
                      <option name="files">
                        <map>
                          <entry key="src/Task.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="39" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="open class Smiley: Drawable {&#10;    override fun draw() {&#10;        print(&quot;:-)&quot;)&#10;    }&#10;}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="hints">
                                        <list />
                                      </option>
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="initializedFromDependency" value="false" />
                                      <option name="length" value="6" />
                                      <option name="offset" value="125" />
                                      <option name="placeholderDependency" />
                                      <option name="placeholderText" value="TODO()" />
                                      <option name="possibleAnswer" value="class HairySmiley: Smiley() {&#10;    override fun draw() {&#10;        print(&quot;?&quot;)&#10;        super.draw()&#10;    }&#10;}" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="studentAnswer" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Task.kt" />
                                <option name="text" value="// type your solution here" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/Tests.kt">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/Tests.kt" />
                                <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="trackLengths" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1554811505000" />
                    </EduTask>
                  </list>
                </option>
                <option name="unitId" value="194042" />
              </Lesson>
            </list>
          </option>
        </EduCourse>
      </option>
    </StudyTaskManager>
  </component>
</project>